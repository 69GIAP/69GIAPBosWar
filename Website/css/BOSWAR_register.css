@charset "utf-8";
/* CSS Document */

/*repeating image as a background image for the <ul> element.
I also set the height and width.*/

ul#register {
	position: absolute;
	right: 10%;
	top: 111px;
	height:54px;
	width: auto;
	list-style:none;
	margin:0;
	padding:0;
	z-index: 1000;
}

/* float each li element so that teh list elements aer displayes horizontally rather than vertically.*/
ul#register li {
	float:left;
}

/*Common CSS for all links
position the background image to the top left is fine for the "register" link
for the "login" link, we will need to overwrite the background position attribute for concerning class (see XHTML markup)
As links by default are displayed inline, we must use "display:block" to specify the height of the link.
Finally, we must position the link relatively.*/
ul#register li a {
	background:url(../images/Boswar_Final_sprite2.png) no-repeat scroll top left;
	display:block;
	height:54px;
	position:relative;
}

/*We will now need to write some CSS for each individual link.
We do this by specifying the class (see XHTML markup).
This tutorial deals with just 2 links.
The "register" link has the class: "register".
The "login" link has the class: "login".
We can hence define CSS attributes for each individual link as follows.
where we specify the width of the links (since each link may have a different width according to the design).
It is also here that we overwrite the background position attribute if needed.
We do not need to do this for the "register" link since the common class already has this defined as "top left".
We will want to position the sprite by writing "background-position:-159px 0px;".
This tells the browser to shift the background 159 pixels to the left and 0 pixels down.*/
ul#register li a.register {
	width: 84px;
}

ul#register li a.login {
	width: 84px;
	background-position:-84px 0px;
}
ul#register li a.logout {
	width: 84px;
	background-position:-168px 0px;
}

/*We now need to create the "hover" state. 
This is how the link will appear when you hover over it with your mouse cursor.
The animation will blend between the 2 states.
To create the hover state, we're going to use a <span> tag.
We'll then use CSS to have that span tag completely fill the link (so that it is exactly the same size as the link).
We'll also need to shift the background image down for the span in order to display the "hover" area of the sprite.
As before, we'll use some common CSS:
Note that we again use "display:block;" since, by default, the <span> tag is displayed inline.
Now that the <span> is displayed as a block, we can define the height and width to 100% - completely filling the link (so that the span and link are exactly the same size).
Also notice that we position the <span> absolutely inside the relatively positioned link.
Positioning the <span> in this way allows us to define a z-index.
The assigning a high z-index ensures that the span's background is displayed above the link's background.*/
ul#register li a span {
	background:url(../images/Boswar_Final_sprite2.png) no-repeat scroll bottom left;
	display:block;
	position:absolute;
	top:0;
	left:0;
	height:100%;
	width:100%;
	z-index:100;
}

/*All that we are left to do is position the background for the <span> tags (contained within the links):
Notice that we shift the background down by 54 pixels for each span tag (since the height of the "register" link is 54px).
This causes the "hover" state to be displayed within each span tag.
As before, we also shift the background left by 159px for the "login" link.*/
ul#register li a.register span {
	background-position:0px -54px;
}
ul#register li a.login span {
	width: 83px;
	background-position:-84px -54px;
}
ul#register li a.logout span {
	width: 83px;
	background-position:-168px -54px;
}

/*One final addition to the CSS is required to ensure that the mouse cursor is display as a pointer when hovering over the <span> tag:*/
ul#register li a span:hover {
	cursor:pointer;
}

